@using Konnect.Service.DatabaseManager.Models
@using Konnekt.Presentation.Components
@using Konnekt.Presentation.Components.Base
@using Konnekt.Presentation.Components.KonnektButton
@using Konnekt.Presentation.Components.KonnektButton.Models
@using Konnekt.Presentation.Components.KonnektIcon
@using Konnekt.Presentation.Components.KonnektInput
@using Konnekt.Presentation.Pages.Konnektion.Main
@using Microsoft.AspNetCore.Components.Forms

@inherits PresentationBase
@page "/Server/{ServerId}"

@if (ServerModel is not null)
{
    <div class="konnektion w-100 container">
        <div class="h-100 row">
            <div class="konnektion__aside-left col-2">
                <div class="konnektion__server-details row justify-content-between align-items-center flex-nowrap">

                    <KonnektIcon Icon="fa-solid fa-earth-americas"
                                 IconClass="p-2"
                                 IconSize="Components.KonnektIcon.Models.IconSize.Medium" />

                    <h3 class="m-0">@ServerModel.ServerName</h3>

                    <KonnektButton Icon="fa-solid fa-ellipsis"
                                   ButtonSize="ButtonSize.Square" />

                </div>

                <div class="row">
                    <KonnektButton OnClick="AddNewChannelClickedAsync"
                                   ButtonSize="ButtonSize.Max"
                                   ButtonType="ButtonType.OnClick"
                                   Label="Add new channel" />

                    @foreach (var channel in ServerModel.ServerChannels.OrderBy(x => x.ChannelOrder).ToList())
                    {
                        <KonnektionChannel ChannelModel="channel" />
                    }
                </div>
            </div>

            <div class="konnektion__chat-container col-8">
                <div class="konnektion__chat-messages row ">
                </div>
                <div class="konnektion__chat row">
                </div>
            </div>

            <div class="konnektion__members-container col-2">

                
            </div>
        </div>
    </div>
}

@code {
    public RenderFragment CreatingChannelFragment(object editContext) => __builder =>
    {
        if (editContext is EditContext context && context.Model is ServerChannel scData)
        {
            <KonnektInput @bind-Value="scData.ChannelName"
                          For="() => scData.ChannelName"
                          Label="Channel name:" />
        }
    };
}